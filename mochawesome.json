{
  "stats": {
    "suites": 2,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-21T19:18:10.281Z",
    "end": "2022-11-21T19:19:21.265Z",
    "duration": 67365,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c2f33699-7b43-44d7-afcc-2420278bed1d",
      "title": "",
      "fullFile": "cypress/e2e/login.cy.js",
      "file": "cypress/e2e/login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
          "title": "Login Functionality Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logins successfully with correct credentials",
              "fullTitle": "Login Functionality Testing Logins successfully with correct credentials",
              "timedOut": null,
              "duration": 21186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login(loginData.validCredentials).then(() => {\n  _loginPage.loginPage.verifySuccessPath();\n});",
              "err": {},
              "uuid": "92874190-b1bd-42ee-8423-0693a4f241e1",
              "parentUUID": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login not allowed with Incorrect credentials",
              "fullTitle": "Login Functionality Testing Login not allowed with Incorrect credentials",
              "timedOut": null,
              "duration": 5815,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login(loginData.invalidCredentials).then(() => {\n  _loginPage.loginPage.verifyFailMessage();\n});",
              "err": {},
              "uuid": "c158d1c3-e9a6-4157-a541-5f248421e71c",
              "parentUUID": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout successfully",
              "fullTitle": "Login Functionality Testing Logout successfully",
              "timedOut": null,
              "duration": 12868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login(loginData.validCredentials).then(() => {\n  _loginPage.loginPage.verifySuccessPath();\n});\ncy.logOut().then(() => {\n  _loginPage.loginPage.verifyLogout();\n});",
              "err": {},
              "uuid": "b3bba29b-6e66-4b02-b937-1f6272ef9e7f",
              "parentUUID": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with EmptyPassword",
              "fullTitle": "Login Functionality Testing Login with EmptyPassword",
              "timedOut": null,
              "duration": 5235,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginEmptyPassword(loginData.emptyPassword).then(() => {\n  _loginPage.loginPage.verifyEmptyPasswordMessage();\n});",
              "err": {},
              "uuid": "1143a7b3-3bd0-4524-9269-5b02bf9243c8",
              "parentUUID": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should Logout successfully and click browser back button not allowing to login back",
              "fullTitle": "Login Functionality Testing Should Logout successfully and click browser back button not allowing to login back",
              "timedOut": null,
              "duration": 14559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login(loginData.validCredentials).then(() => {\n  _loginPage.loginPage.verifySuccessPath();\n});\ncy.logOut().then(() => {\n  _loginPage.loginPage.verifyLogout();\n});\ncy.go('back');\ncy.url().should('not.contain', '/account/dashboard/');",
              "err": {},
              "uuid": "1a27bfbd-f04e-4e3c-98b9-3efa378a4cae",
              "parentUUID": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify forgot password link working",
              "fullTitle": "Login Functionality Testing Verify forgot password link working",
              "timedOut": null,
              "duration": 4488,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.loginPage.verifyForgotPasswordLink();",
              "err": {},
              "uuid": "d6ecd085-38a0-44fd-8647-56632ef56f45",
              "parentUUID": "40abe93e-a04c-4b61-aea6-45dd7f6d3467",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92874190-b1bd-42ee-8423-0693a4f241e1",
            "c158d1c3-e9a6-4157-a541-5f248421e71c",
            "b3bba29b-6e66-4b02-b937-1f6272ef9e7f",
            "1143a7b3-3bd0-4524-9269-5b02bf9243c8",
            "1a27bfbd-f04e-4e3c-98b9-3efa378a4cae",
            "d6ecd085-38a0-44fd-8647-56632ef56f45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 64151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be771dbe-0aba-4563-8ecd-042de5d63cbb",
      "title": "",
      "fullFile": "cypress/e2e/apiMovies.cy.js",
      "file": "cypress/e2e/apiMovies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "960b3345-fc21-456a-92cd-4b65e57d3d1c",
          "title": "Testing GET top-rated Movies API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET top rated movies with default page 1 result",
              "fullTitle": "Testing GET top-rated Movies API GET top rated movies with default page 1 result",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${apiUrl}movie/top_rated`,\n  qs: {\n    api_key: api_Key\n  }\n}).should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.page).to.eq(1);\n});",
              "err": {},
              "uuid": "478eb08d-2c34-475c-b292-92799dbe97f8",
              "parentUUID": "960b3345-fc21-456a-92cd-4b65e57d3d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should display error message code 401 GET top rated movies with incorrect api_key",
              "fullTitle": "Testing GET top-rated Movies API Should display error message code 401 GET top rated movies with incorrect api_key",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${apiUrl}movie/top_rated`,\n  qs: {\n    api_key: 'dasdsasddsaasddsaadsdsa'\n  },\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body.page).not.exist;\n});",
              "err": {},
              "uuid": "8cc13cec-2747-42e8-a3af-a6ef39688bf6",
              "parentUUID": "960b3345-fc21-456a-92cd-4b65e57d3d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not GET top rated movies with page=0",
              "fullTitle": "Testing GET top-rated Movies API Should not GET top rated movies with page=0",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${apiUrl}movie/top_rated`,\n  qs: {\n    api_key: api_Key,\n    page: apiData.topRated.pageZero\n  },\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(422);\n});",
              "err": {},
              "uuid": "a88aaec0-4ad3-4a73-bf79-ec737affbe01",
              "parentUUID": "960b3345-fc21-456a-92cd-4b65e57d3d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should GET top rated movies with max page",
              "fullTitle": "Testing GET top-rated Movies API Should GET top rated movies with max page",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${apiUrl}movie/top_rated`,\n  qs: {\n    api_key: api_Key,\n    page: apiData.topRated.pageMax\n  },\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.page).to.eq(apiData.topRated.pageMax);\n});",
              "err": {},
              "uuid": "23fdd2e6-2c9e-439c-8a8a-f483ca4d0ced",
              "parentUUID": "960b3345-fc21-456a-92cd-4b65e57d3d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should GET top rated movies with random page between 1-500",
              "fullTitle": "Testing GET top-rated Movies API Should GET top rated movies with random page between 1-500",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${apiUrl}movie/top_rated`,\n  qs: {\n    api_key: api_Key,\n    page: randomNumber\n  },\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.page).to.eq(randomNumber);\n  movieId = response.body.results[0].id;\n});",
              "err": {},
              "uuid": "f4f1a45f-6c75-4edf-b02c-17b682818a96",
              "parentUUID": "960b3345-fc21-456a-92cd-4b65e57d3d1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "478eb08d-2c34-475c-b292-92799dbe97f8",
            "8cc13cec-2747-42e8-a3af-a6ef39688bf6",
            "a88aaec0-4ad3-4a73-bf79-ec737affbe01",
            "23fdd2e6-2c9e-439c-8a8a-f483ca4d0ced",
            "f4f1a45f-6c75-4edf-b02c-17b682818a96"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5ed4470b-d35b-4708-9dec-dcd8fd3f9a0d",
          "title": "Testing POST rate-Movies API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST rate movies with random movieId everytime",
              "fullTitle": "Testing POST rate-Movies API tests POST rate movies with random movieId everytime",
              "timedOut": null,
              "duration": 530,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${apiUrl}movie/${movieId}/rating`,\n  qs: {\n    api_key: api_Key\n  },\n  headers: {\n    'Authorization': token,\n    'Content-Type': 'application/json; charset=utf-8'\n  },\n  body: body,\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.success).to.eq(true);\n});",
              "err": {},
              "uuid": "5d00ce30-6e25-437c-8ce0-206e00d25914",
              "parentUUID": "5ed4470b-d35b-4708-9dec-dcd8fd3f9a0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST with incorrect movieId reponse code should be 404",
              "fullTitle": "Testing POST rate-Movies API tests POST with incorrect movieId reponse code should be 404",
              "timedOut": null,
              "duration": 471,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let wrongMovieId = \"adasddsaasdads\";\ncy.request({\n  method: 'POST',\n  url: `${apiUrl}movie/${wrongMovieId}/rating`,\n  qs: {\n    api_key: api_Key\n  },\n  headers: {\n    'Authorization': token,\n    'Content-Type': 'application/json; charset=utf-8'\n  },\n  body: body,\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(404);\n  expect(response.body.success).to.eq(false);\n});",
              "err": {},
              "uuid": "9652725b-e189-4e70-832d-cb8ef9d0f159",
              "parentUUID": "5ed4470b-d35b-4708-9dec-dcd8fd3f9a0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST without token then reponse code should be 401",
              "fullTitle": "Testing POST rate-Movies API tests POST without token then reponse code should be 401",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${apiUrl}movie/${movieId}/rating`,\n  qs: {\n    api_key: api_Key\n  },\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  },\n  body: body,\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body.success).to.eq(false);\n});",
              "err": {},
              "uuid": "59adddf4-d84e-4d47-aaea-0cd1493a6823",
              "parentUUID": "5ed4470b-d35b-4708-9dec-dcd8fd3f9a0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST with incorrect rating not multiple of 0.5 then reponse code should be 400",
              "fullTitle": "Testing POST rate-Movies API tests POST with incorrect rating not multiple of 0.5 then reponse code should be 400",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: `${apiUrl}movie/${movieId}/rating`,\n  qs: {\n    api_key: api_Key\n  },\n  headers: {\n    'Authorization': token,\n    'Content-Type': 'application/json; charset=utf-8'\n  },\n  body: bodyWrong,\n  failOnStatusCode: false\n}).should(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body.success).to.eq(false);\n  expect(response.body.status_code).to.eq(18);\n});",
              "err": {},
              "uuid": "9852c664-9960-4322-90dd-3c3f747d8edf",
              "parentUUID": "5ed4470b-d35b-4708-9dec-dcd8fd3f9a0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d00ce30-6e25-437c-8ce0-206e00d25914",
            "9652725b-e189-4e70-832d-cb8ef9d0f159",
            "59adddf4-d84e-4d47-aaea-0cd1493a6823",
            "9852c664-9960-4322-90dd-3c3f747d8edf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}